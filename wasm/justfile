default: test-js

build-wapm:
  echo "Building locally"
  # cargo wapm -d --out-dir ./wapm
  # cargo build --target wasm32-unknown-unknown
  # cp target/wasm32-unknown-unknown/release/spdcalc_wasm.wasm wapm/spdcalc.wasm

  # RUSTFLAGS='-C target-feature=+atomics,+bulk-memory,+mutable-globals' \
  #   rustup run nightly-2023-05-31 \
  #   cargo build --target wasm32-wasi --release
  cargo build --target wasm32-wasi --release
  cp target/wasm32-wasi/release/spdcalc_wasm.wasm wapm/spdcalc.wasm
  cp spdcalc.wai wapm/

docs: build-wapm
  wasmer run wasmer/wai-bindgen-cli --dir=. -- markdown --export spdcalc.wai --out-dir ./docs

build-js: build-wapm
  wasmer-pack js ./wapm --out-dir ./js

build-py: build-wapm
  # RUSTFLAGS='-C target-feature=+atomics,+bulk-memory,+mutable-globals' \
  #   rustup run nightly-2023-05-31 \
  #   wasmer-pack python ./wapm --out-dir ./py/package
  wasmer-pack python ./wapm --out-dir ./py/package
  cp py/README.md py/package/
  cp py/pyproject-template.toml py/package/pyproject.toml

publish-py-test: build-py
  pip install --upgrade build twine
  cd {{justfile_directory()}}/py/package && \
    rm -rf dist/* && \
    python3 -m build && \
    python3 -m twine upload --repository testpypi dist/*

test-js: build-js
  pnpm --dir {{justfile_directory()}}/js/package install
  node js/index.mjs

test-py: build-py
  python3 -m venv .pyenv
  source .pyenv/bin/activate
  pip install wasmer==1.0.0 wasmer_compiler_cranelift==1.0.0
  python3 py/test.py